const { SlashCommandBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('replay')
        .setDescription('‡§Æ‡•å‡§ú‡•Ç‡§¶‡§æ ‡§ó‡§æ‡§®‡•á ‡§ï‡•ã ‡§∂‡•Å‡§∞‡•Ç ‡§∏‡•á ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ö‡§≤‡§æ‡§è‡§Ç'),

    async execute(interaction) {
        await interaction.deferReply();

        const queue = global.getQueue(interaction.guild.id);
        const player = global.audioPlayers.get(interaction.guild.id);

        if (!queue.nowPlaying || !player) {
            return interaction.editReply('‚ùå ‡§ï‡•ã‡§à ‡§ó‡§æ‡§®‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à!');
        }

        try {
            const { playFallbackTrack } = require('../src/MusicPlayer');
            const currentTrack = queue.nowPlaying;
            
            player.stop();
            
            setTimeout(async () => {
                const success = await playFallbackTrack(interaction.guild.id, currentTrack);
                if (success) {
                    queue.lastActivity = Date.now();
                    return interaction.editReply(`üîÑ **${currentTrack.info?.title || '‡§ó‡§æ‡§®‡§æ'}** ‡§ï‡•ã restart ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ!`);
                } else {
                    return interaction.editReply('‚ùå Replay ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç error ‡§π‡•Å‡§à!');
                }
            }, 500);

        } catch (error) {
            console.error('Replay error:', error);
            return interaction.editReply('‚ùå Replay ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç error ‡§π‡•Å‡§à!');
        }
    },
};
